#!/bin/zsh

set -e

zparseopts tls-skip-verify=TLS_SKIP_VERIFY

CLUSTER_NAME=$(kubectl config current-context)

AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output text --query 'Account')

VAULT_USER="vault-$CLUSTER_NAME"

if ! vault secrets list | grep -q "^$VAULT_AWS_PATH/ "
then
  vault secrets enable $TLS_SKIP_VERIFY -path=$VAULT_AWS_PATH aws
fi

aws iam list-users | grep -q "\"$VAULT_USER\"" || \
  aws iam create-user --user "$VAULT_USER"

cat <<-EOF > /tmp/vault-aws-policy.json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "iam:AttachUserPolicy",
        "iam:CreateAccessKey",
        "iam:CreateUser",
        "iam:DeleteAccessKey",
        "iam:DeleteUser",
        "iam:DeleteUserPolicy",
        "iam:DetachUserPolicy",
        "iam:ListAccessKeys",
        "iam:ListAttachedUserPolicies",
        "iam:ListGroupsForUser",
        "iam:ListUserPolicies",
        "iam:PutUserPolicy",
        "iam:RemoveUserFromGroup"
      ],
      "Resource": [
        "arn:aws:iam:::user/vault-*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "sts:GetFederationToken"
      ],
      "Resource": [
        "*"
      ]
    }
  ]
}
EOF

ARN=$(aws iam list-policies |
  jq -r '.Policies[] | select(.PolicyName=="vault-user-policy") | .Arn')
if [[ "$ARN" == "" ]]; then
  ARN=$(aws iam create-policy --policy-name vault-user-policy \
    --policy-document file:///tmp/vault-aws-policy.json |
    jq -r '.Policy.Arn')
fi

aws iam attach-user-policy --user-name $VAULT_USER --policy-arn $ARN

aws iam list-access-keys --user-name $VAULT_USER |
  jq -r '.AccessKeyMetadata[].AccessKeyId' |
  xargs -I {} aws iam delete-access-key --access-key-id {} --user-name $VAULT_USER
ACCESS_KEY=$(aws iam create-access-key --user-name $VAULT_USER)

AWS_ACCESS_KEY_ID=$(echo $ACCESS_KEY | jq -r '.AccessKey.AccessKeyId')
AWS_SECRET_ACCESS_KEY=$(echo $ACCESS_KEY | jq -r '.AccessKey.SecretAccessKey')

vault write $TLS_SKIP_VERIFY $VAULT_AWS_PATH/config/root \
  access_key=$AWS_ACCESS_KEY_ID \
  secret_key=$AWS_SECRET_ACCESS_KEY \
  region=$AWS_DEFAULT_REGION
