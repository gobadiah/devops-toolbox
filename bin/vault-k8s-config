#!/bin/zsh

set -e

zparseopts tls-skip-verify=TLS_SKIP_VERIFY

CLUSTER=$(kubectl config current-context)
SERVICE_ACCOUNT="vault-auth"

rm -rf /tmp/ca || true
mkdir -p /tmp/ca

aws s3 cp --recursive $KOPS_STATE_STORE/$CLUSTER/pki/issued/ca /tmp/ca

ca=/tmp/ca/$(ls /tmp/ca | grep -v keyset)

aws s3 cp --recursive $KOPS_STATE_STORE/$CLUSTER/pki/private/ca /tmp/ca

key=/tmp/ca/$(ls /tmp/ca | grep -v keyset | grep ".key$")

if ! vault auth list $TLS_SKIP_VERIFY | grep -q "^$VAULT_K8S_PATH/"; then
  vault auth enable $TLS_SKIP_VERIFY -path=$VAULT_K8S_PATH kubernetes
fi

if ! kubectl get sa | grep -q "^$SERVICE_ACCOUNT "; then
  kubectl -n default create serviceaccount $SERVICE_ACCOUNT
fi

# Binding a service account with the ClusterRole system:auth-delegator
cat << EOF | kubectl apply -f -
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: role-tokenreview-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: $SERVICE_ACCOUNT
  namespace: default
EOF

# Generating token for service account $SERVICE_ACCOUNT
SECRET_NAME=$(kubectl -n default get serviceaccount $SERVICE_ACCOUNT -o jsonpath='{.secrets[0].name}')
TR_ACCOUNT_TOKEN=$(kubectl -n default get secret ${SECRET_NAME} -o jsonpath='{.data.token}' | base64 --decode)

KUBERNETES_HOST=$(kubectl config view -o json | jq -r ".clusters[] | select(.name==\"$(kubectl config current-context)\" ) | .cluster.server")

vault write $TLS_SKIP_VERIFY auth/$VAULT_K8S_PATH/config \
  kubernetes_host=$KUBERNETES_HOST \
  token_reviewer_jwt=$TR_ACCOUNT_TOKEN \
  kubernetes_ca_cert=@$ca

vault secrets list | grep -q "^$VAULT_K8S_PATH/" ||
  vault secrets enable $TLS_SKIP_VERIFY -path=$VAULT_K8S_PATH pki

VAULT_HOST=${VAULT_HOST:=$(echo $VAULT_ADDR | sed -E 's#https?://([0-9\.a-z]+).*#\1#')}

vault write $TLS_SKIP_VERIFY $VAULT_K8S_PATH/config/urls \
  issuing_certificates="https://$VAULT_HOST/v1/$VAULT_K8S_PATH/ca" \
  crl_distribution_points="https://$VAULT_HOST/v1/$VAULT_K8S_PATH/crl"

cat $ca $key > /tmp/ca/ca.pem

vault write $TLS_SKIP_VERIFY $VAULT_K8S_PATH/config/ca pem_bundle=@/tmp/ca/ca.pem

vault write $TLS_SKIP_VERIFY $VAULT_CLUSTER_PATH/api host=$KUBERNETES_HOST

rm -rf /tmp/ca || true
